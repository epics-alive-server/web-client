/* Created by cencode from file "ioc_alive.cec". */
/* Do not edit, as any changes will be overwritten. */

static char *error_string =
"<html><head>\n"
"<title>Error</title>\n"
"</head><body>\n"
"<H3>Error!</H3>\n"
"%s\n"
"</body></html>\n";

static char *javascript_functions =
"function time_format(time)\n"
"{ \n"
"    var temp = time; \n"
"    var secs = temp%60; \n"
"    temp = Math.floor(temp/60); \n"
"    var mins = temp%60; \n"
"    temp = Math.floor(temp/60); \n"
"    var hours = temp%24; \n"
"    temp = Math.floor(temp/24); \n"
"    var days = temp;\n"
"    if( days)\n"
"        return String(days) + \"&nbsp;day\" + ((days == 1) \? \"\" : \"s\") + \", \" + \n"
"        String(hours) + \"&nbsp;hour\" + ((hours == 1) \? \"\" : \"s\");\n"
"    else if( hours) \n"
"        return String(hours) + \"&nbsp;hour\" + ((hours == 1) \? \"\" : \"s\") + \n"
"        \", \" + String(mins) + \"&nbsp;minute\" + ((mins == 1) \? \"\" : \"s\");\n"
"    else if( mins) \n"
"        return String(mins) + \"&nbsp;minute\" + ((mins == 1) \? \"\" : \"s\")  + \n"
"        \", \" + String(secs) + \"&nbsp;second\" + ((secs == 1) \? \"\" : \"s\");\n"
"    else \n"
"        return String(secs) + \"&nbsp;second\" + ((secs == 1) \? \"\" : \"s\");\n"
"}\n"
"\n"
"function time_string(status, time_value)\n"
"{ \n"
"    if( status == \"unknown\" ) \n"
"    { \n"
"        return \"<span class=\\\"status_unknown\\\">uncertain&nbsp;&harr;</span>\";\n"
"    }\n"
"    else if( status == \"up\" )\n"
"    {\n"
"        return \"<span class=\\\"status_up\\\">\" + \n"
"            time_format(current_time - time_value) + \"&nbsp;&uarr;</span>\"; \n"
"    }\n"
"    else if( status == \"down\" )\n"
"    {\n"
"        return \"<span class=\\\"status_down\\\">\" +\n"
"            time_format(current_time - time_value) + \"&nbsp;&darr;</span>\";\n"
"    }\n"
"    else if( status == \"down_unknown\" )\n"
"    {\n"
"        return \"<span class=\\\"status_down\\\"> &gt;&nbsp;\" + \n"
"            time_format(current_time - start_time) + \"&nbsp;&darr;</span>\";\n"
"    }\n"
"    else   // if( status == \"conflict\" )\n"
"    {\n"
"        return \"<span class=\\\"status_conflict\\\"> &gt;&nbsp;\" +\n"
"            time_format(current_time - time_value) + \"&nbsp;&hArr;</span>\";\n"
"    }\n"
"}\n"
"\n"
"function status_arrow(status)\n"
"{ \n"
"    if( status == \"unknown\" ) \n"
"    {\n"
"        return \"<span class=\\\"status_unknown\\\">&harr;&nbsp;</span>\";\n"
"    }\n"
"    else if( status == \"up\" )\n"
"    {\n"
"        return \"<span class=\\\"status_up\\\">&uarr;&nbsp;</span>\";\n"
"    }\n"
"    else if( status == \"conflict\" )\n"
"    {\n"
"        return \"<span class=\\\"status_conflict\\\">&hArr;&nbsp;</span>\";\n"
"    }\n"
"    else\n"
"    {\n"
"        return \"<span class=\\\"status_down\\\">&darr;&nbsp;</span>\";\n"
"    }\n"
"}\n"
"\n"
"function display()\n"
"{\n"
"    var x = \"\";\n"
"    x = x + \"<table border cellpadding=3>\";\n"
"    x = x + \"<tr><th>IOC</th><th><span class=\\\"status_up\\\">uptime</span>/<span class=\\\"status_down\\\">downtime</span></th><th>Address</th><th>Message</th><th>Type</th></tr>\";\n"
"\n"
"    for( i in iocs) \n"
"    { \n"
"        x = x + \"<tr><td><a href=\\\"%s\?ioc=\" + iocs[i].name + \"\\\">\" + iocs[i].name + \"</a></td><td>\";\n"
"        x = x + time_string( iocs[i].status, iocs[i].time_value);\n"
"        x = x + \"</td><td>\" + \"<a href=\\\"%s\?net=\"  + iocs[i].address[0] + \".\" + iocs[i].address[1] + \".\" + iocs[i].address[2] + \"\\\">\"  + iocs[i].address[0] + \".\" + iocs[i].address[1] + \".\" + iocs[i].address[2] + \"</a>\" + \".\" + iocs[i].address[3] + \"</td><td>\";\n"
"        if( iocs[i].message == 0)\n"
"            x = x + \"<span class=\\\"msg_zero\\\">\" + iocs[i].message + \"</span>\";\n"
"        else\n"
"            x = x + \"<span class=\\\"msg_nonzero\\\">\" + iocs[i].message + \"</span>\";\n"
"        x = x + \"</td><td>\" + iocs[i].type + \"</td></tr>\"; \n"
"    }\n"
"    x = x + \"</table>\";\n"
"    document.getElementById(\"tbl\").innerHTML=x;\n"
"    x = \"\";\n"
"    x = x + \"<table border cellpadding=3>\";\n"
"    x = x + \"<tr><th>IOC</th><th>GROUP</th><th>ENGINEER</th><th>LOCATION</th><th>ARCH</th><th>SUPPORT</th><th>EPICS_BASE</th><th>TOP</th></tr>\";\n"
"\n"
"    for( i in envvars) \n"
"    { \n"
"        x = x + \"<tr><td>\" + status_arrow(envvars[i].status) + \"<a href=\\\"%s\?ioc=\" + envvars[i].name + \n"
"            \"\\\">\" + envvars[i].name + \"</a>\";\n"
"        x = x + \"</td><td>\" + \"<a href=\\\"%s\?grp=\" + \n"
"            envvars[i].group + \"\\\">\" + envvars[i].group + \"</a>\" + \n"
"            \"</td><td>\" + \"<a href=\\\"%s\?eng=\" + \n"
"            envvars[i].engineer + \"\\\">\" + envvars[i].engineer + \"</a>\" + \n"
"            \"</td><td>\" + envvars[i].location + \"</td><td>\" + \n"
"            envvars[i].arch + \"</td><td>\" + envvars[i].support + \n"
"            \"</td><td>\" + envvars[i].base + \"</td><td>\" + envvars[i].top + \n"
"            \"</td></tr>\"; \n"
"    }\n"
"    x = x + \"</table>\";\n"
"    document.getElementById(\"tbl_envvar\").innerHTML=x;\n"
"\n"
"    if( vxworks.length == 0)\n"
"    {\n"
"        vxworks_table.style.display = \"none\";\n"
"    }\n"
"    else\n"
"    {\n"
"        // vxworks table\n"
"        x = \"\";\n"
"        x = x + \"<table border cellpadding=3>\";\n"
"        x = x + \"<tr><th>IOC</th><th>Bootdev(U,P)</th><th>Boot Host</th><th>Boot File</th><th>IP Address</th><th>Boot Host Address</th><th>Gateway Address</th><th>Flags</th><th>Target Name</th><th>Startup Script</th></tr>\";\n"
"        for( i in vxworks) \n"
"        { \n"
"            x = x + \"<tr><td>\" + status_arrow(vxworks[i].status) + \"<a href=\\\"%s\?ioc=\" + vxworks[i].name + \n"
"                \"\\\">\" + vxworks[i].name + \"</a>\";\n"
"            x = x + \"</td><td>\" + \n"
"                vxworks[i].bootdev + \"</td><td>\" + vxworks[i].host_name + \n"
"                \"</td><td>\" + vxworks[i].boot_file + \"</td><td>\" + \n"
"                vxworks[i].vx_ip + \"</td><td>\" + vxworks[i].host_ip + \n"
"                \"</td><td>\" + vxworks[i].gateway_ip + \"</td><td>\" + \n"
"                vxworks[i].flags + \"</td><td>\" + vxworks[i].vx_name + \n"
"                \"</td><td>\" + vxworks[i].script + \"</td></tr>\"; \n"
"        }\n"
"        x = x + \"</table>\";\n"
"        document.getElementById(\"tbl_vxworks\").innerHTML=x;\n"
"    }\n"
"\n"
"    if( linux.length == 0)\n"
"    {\n"
"        linux_table.style.display = \"none\";\n"
"    }\n"
"    else\n"
"    {\n"
"        // linux table\n"
"        x = \"\";\n"
"        x = x + \"<table border cellpadding=3>\";\n"
"        x = x + \"<tr><th>IOC</th><th>User</th><th>Group</th><th>Hostname</th></tr>\";\n"
"        for( i in linux) \n"
"        { \n"
"            x = x + \"<tr><td>\" + status_arrow(linux[i].status) + \"<a href=\\\"%s\?ioc=\" + linux[i].name + \n"
"                \"\\\">\" + linux[i].name + \"</a>\";\n"
"            x = x + \"</td><td>\" + linux[i].user + \n"
"                \"</td><td>\" + linux[i].group + \"</td><td>\" + \n"
"                linux[i].hostname + \"</td></tr>\"; \n"
"        }\n"
"        x = x + \"</table>\";\n"
"        document.getElementById(\"tbl_linux\").innerHTML=x;\n"
"    }\n"
"\n"
"    if( darwin.length == 0)\n"
"    {\n"
"        darwin_table.style.display = \"none\";\n"
"    }\n"
"    else\n"
"    {\n"
"        // darwin table\n"
"        x = \"\";\n"
"        x = x + \"<table border cellpadding=3>\";\n"
"        x = x + \"<tr><th>IOC</th><th>User</th><th>Group</th><th>Hostname</th></tr>\";\n"
"        for( i in darwin) \n"
"        { \n"
"            x = x + \"<tr><td>\" + status_arrow(darwin[i].status) + \"<a href=\\\"%s\?ioc=\" + darwin[i].name + \n"
"                \"\\\">\" + darwin[i].name + \"</a>\";\n"
"            x = x + \"</td><td>\" + darwin[i].user + \n"
"                \"</td><td>\" + darwin[i].group + \"</td><td>\" + \n"
"                darwin[i].hostname + \"</td></tr>\"; \n"
"        }\n"
"        x = x + \"</table>\";\n"
"        document.getElementById(\"tbl_darwin\").innerHTML=x;\n"
"    }\n"
"\n"
"    if( windows.length == 0)\n"
"    {\n"
"        windows_table.style.display = \"none\";\n"
"    }\n"
"    else\n"
"    {\n"
"        // windows table\n"
"        x = \"\";\n"
"        x = x + \"<table border cellpadding=3>\";\n"
"        x = x + \"<tr><th>IOC</th><th>User</th><th>Machine</th></tr>\";\n"
"        for( i in windows) \n"
"        { \n"
"            x = x + \"<tr><td>\" + status_arrow(windows[i].status) + \"<a href=\\\"%s\?ioc=\" + windows[i].name + \n"
"                \"\\\">\" + windows[i].name + \"</a>\";\n"
"            x = x + \"</td><td>\" + windows[i].user + \"</td><td>\" + \n"
"                windows[i].machine + \"</td></tr>\"; \n"
"        }\n"
"        x = x + \"</table>\";\n"
"        document.getElementById(\"tbl_windows\").innerHTML=x;\n"
"    }\n"
"\n"
"}\n"
"\n"
"\n"
"function time_sort(arr, id) \n"
"{\n"
"    if(sort == id) \n"
"        sortdir *= -1;\n"
"    else \n"
"    {\n"
"        sort = id; \n"
"        sortdir = 1; \n"
"    }\n"
"    arr.sort( function(a,b) \n"
"              { \n"
"                  var status_a, status_b;\n"
"                  if(a.status == \"up\")\n"
"                      status_a = 0;\n"
"                  else if(a.status == \"down\")\n"
"                      status_a = 1;\n"
"                  else if(a.status == \"conflict\")\n"
"                      status_a = 2;\n"
"                  else\n"
"                      status_a = 3;\n"
"\n"
"                  if(b.status == \"up\")\n"
"                      status_b = 0;\n"
"                  else if(b.status == \"down\")\n"
"                      status_b = 1;\n"
"                  else if(b.status == \"conflict\")\n"
"                      status_b = 2;\n"
"                  else\n"
"                      status_b = 3;\n"
"                  \n"
"\n"
"                  if( (status_a == 3) && (status_b == 3) ) return 0;\n"
"                  if( status_a == 3) return -sortdir; \n"
"                  if( status_b == 3) return sortdir;\n"
"                  if( (status_a == 1) && (status_b == 1) )\n"
"                  { \n"
"                      if( a.time_value > b.time_value) return sortdir; \n"
"                      else if( a.time_value < b.time_value) return -sortdir; \n"
"                      else return 0;\n"
"                  }\n"
"                  if( status_a == 1) return -sortdir; \n"
"                  if( status_b == 1) return sortdir;\n"
"                  if( (status_a == 2) && (status_b == 2) )\n"
"                  { \n"
"                      if( a.time_value > b.time_value) return sortdir; \n"
"                      else if( a.time_value < b.time_value) return -sortdir; \n"
"                      else return 0;\n"
"                  }\n"
"                  if( status_a == 2) return -sortdir; \n"
"                  if( status_b == 2) return sortdir;\n"
"                  if( a.time_value > b.time_value) return -sortdir; \n"
"                  else if( a.time_value < b.time_value) return sortdir; \n"
"                  else return 0;\n"
"              } ); \n"
"    display(); \n"
"}\n"
"\n"
"function address_sort(arr, id) \n"
"{\n"
"    if(sort == id) \n"
"        sortdir *= -1; \n"
"    else \n"
"    { \n"
"        sort = id; \n"
"        sortdir = 1; \n"
"    }\n"
"    var x = \"\";\n"
"    arr.sort( function(a,b)\n"
"              {\n"
"                  var i; \n"
"                  for( i = 0; i < 4; i++)\n"
"                  { \n"
"                      if( a.address[i] < b.address[i])\n"
"                          return -sortdir;\n"
"                      if( a.address[i] > b.address[i])\n"
"                          return sortdir;}\n"
"                  return 0; \n"
"              } );\n"
"    display(); \n"
"}\n"
"\n"
"\n"
"function generic_sort(type, arr, id) \n"
"{\n"
"    if(sort == id) \n"
"        sortdir *= -1; \n"
"    else \n"
"    {\n"
"        sort = id; \n"
"        sortdir = 1; \n"
"    }\n"
"    switch(type)\n"
"    {\n"
"        case \'name\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.name < b.name) return -sortdir;\n"
"                      if( a.name > b.name) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'arch\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.arch < b.arch) return -sortdir;\n"
"                      if( a.arch > b.arch) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'support\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.support < b.support) return -sortdir;\n"
"                      if( a.support > b.support) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'group\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.group < b.group) return -sortdir;\n"
"                      if( a.group > b.group) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'engineer\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.engineer < b.engineer) return -sortdir;\n"
"                      if( a.engineer > b.engineer) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'type\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.type < b.type) return -sortdir;\n"
"                      if( a.type > b.type) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'user\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.user < b.user) return -sortdir;\n"
"                      if( a.user > b.user) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'bootdev\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.bootdev < b.bootdev) return -sortdir;\n"
"                      if( a.bootdev > b.bootdev) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'hostname\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.host_name < b.host_name) return -sortdir;\n"
"                      if( a.host_name > b.host_name) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'bootfile\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.boot_file < b.boot_file) return -sortdir;\n"
"                      if( a.boot_file > b.boot_file) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"        case \'message\':\n"
"        arr.sort( function(a,b)\n"
"                  { \n"
"                      if( a.message < b.message) return -sortdir;\n"
"                      if( a.message > b.message) return sortdir; \n"
"                      return 0;\n"
"                  } );\n"
"        break;\n"
"    }\n"
"    display(); \n"
"}\n"
"\n"
"display();\n";

